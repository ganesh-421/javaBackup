Source Code For Calculator Application
Section 19, Lecture 93
//Model.java
package sample;

/**
 * Created by ashu on 08-May-16.
 */
public class Model {

    public long calculate(long number1,long number2,String operator){

        switch (operator){

            case "+":
                    return number1+number2;
            case "-":
                    return number1-number2;
            case "*":
                    return number1*number2;
            case "/":
                    if(number2==0)
                        return 0;

                return number1/number2;

        }
        return 0;

    }

}

//sample.fxml
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.text.*?>
<?import javafx.scene.shape.*?>
<?import java.lang.*?>
<?import javafx.scene.layout.*?>
<?import javafx.geometry.Insets?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>

<GridPane alignment="center" hgap="10" vgap="10" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.Controller">
    <columnConstraints>
        <ColumnConstraints />
    </columnConstraints>
    <rowConstraints>
        <RowConstraints />
    </rowConstraints>
    <children>
        <VBox prefHeight="300.0" prefWidth="300.0">
            <children>
                <StackPane prefHeight="50.0" prefWidth="230.0">
                    <children>
                        <Rectangle arcHeight="5.0" arcWidth="5.0" fill="DODGERBLUE" height="50.0" stroke="BLACK" strokeType="INSIDE" width="230.0" />
                        <Text fx:id="output" strokeType="OUTSIDE" strokeWidth="0.0"  />
                    </children>
                </StackPane>
                <HBox alignment="CENTER" prefHeight="53.0" prefWidth="300.0" spacing="10.0">
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="7" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="8" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="9" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processop" prefHeight="50.0" prefWidth="50.0" text="+" />
                    </children>
                </HBox>
                <HBox alignment="CENTER" prefHeight="53.0" prefWidth="300.0" spacing="10.0">
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="4" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="5" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="6" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processop" prefHeight="50.0" prefWidth="50.0" text="-" />
                    </children>
                </HBox>
                <HBox alignment="CENTER" prefHeight="53.0" prefWidth="300.0" spacing="10.0">
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="1" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="2" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="3" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processop" prefHeight="50.0" prefWidth="50.0" text="*" />
                    </children>
                </HBox>
                <HBox alignment="CENTER" prefHeight="53.0" prefWidth="300.0" spacing="10.0">
                    <children>
                        <Button mnemonicParsing="false" onAction="#processnum" prefHeight="50.0" prefWidth="50.0" text="0" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processop" prefHeight="50.0" prefWidth="50.0" text="/" />
                    </children>
                    <children>
                        <Button mnemonicParsing="false" onAction="#processop" prefHeight="50.0" prefWidth="110" text="=" />
                    </children>

                </HBox>
            </children>
        </VBox>
    </children>
</GridPane>

//Controller.java

package sample;

import javafx.event.ActionEvent;
import javafx.scene.control.Button;
import javafx.scene.text.Text;

import javax.swing.*;

public class Controller {

    public Text output;
    private long number1=0;
    public String operator="";
    private boolean start= true;
    Model model= new Model();
    public void  processnum(ActionEvent event)
    {
        if(start){
            output.setText("");
            start=false;
        }

        String value= ((Button)event.getSource()).getText();
        output.setText(output.getText()+ value);

    }

    public void processop(ActionEvent event){

        String value= ((Button)event.getSource()).getText();

        if(!"=".equals(value)){
            if(!operator.isEmpty())
                return;

            operator=value;

            number1=Long.parseLong(output.getText());
            output.setText("");

        }
        else {
            if (operator.isEmpty())
                return;

            output.setText(String.valueOf(model.calculate(number1,Long.parseLong(output.getText()),operator)));
            operator="";
            start=true;

        }

    }

}

//Main.java
package sample;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

public class Main extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception{
        Parent root = FXMLLoader.load(getClass().getResource("sample.fxml"));
        primaryStage.setTitle("Hello World");
        primaryStage.setScene(new Scene(root, 300, 275));
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}